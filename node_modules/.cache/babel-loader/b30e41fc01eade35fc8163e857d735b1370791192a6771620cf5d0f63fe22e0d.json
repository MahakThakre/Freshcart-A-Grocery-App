{"ast":null,"code":"export default {\n  name: \"ViewProducts\",\n  data() {\n    return {\n      approvedCategories: [],\n      formData: {\n        category_name: \"\"\n      },\n      fta: {\n        category_name: \"\"\n      },\n      products: []\n    };\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isUser() {\n      return this.account.roles.includes(\"<Role 1>\");\n    }\n  },\n  async mounted() {\n    const c_id = this.$route.params.category_id;\n    const response = await fetch(`http://localhost:5000/api/getProducts/${c_id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    if (response.ok) {\n      this.products = Array.isArray(data) ? data : [];\n    } else {\n      alert(\"No Products Available\");\n    }\n  }\n};","map":{"version":3,"names":["name","data","approvedCategories","formData","category_name","fta","products","computed","currentUserEmail","$store","state","currentUserId","currentUserName","currentUsername","isUser","account","roles","includes","mounted","c_id","$route","params","category_id","response","fetch","method","headers","localStorage","getItem","json","console","log","ok","Array","isArray","alert"],"sources":["C:\\Users\\mahak\\Downloads\\21f2000845-freshcart main\\Mad 2 project\\freshcart\\src\\components\\Products.vue"],"sourcesContent":["<template>\n  <div class=\"product-list\">\n    <router-link\n      :to=\"'/admin_dashboard/' + currentUserEmail\"\n      class=\"back-button\"\n      >Back\n    </router-link>\n    <h2>Category Products</h2>\n    <div v-if=\"products.length > 0\">\n      <ul class=\"product-ul\">\n        <li v-for=\"product in products\" :key=\"product.id\" class=\"product-item\">\n          <strong class=\"product-label\">Product Name:</strong>\n          <span class=\"product-info\">{{ product.name }}</span\n          ><br />\n\n          <strong class=\"product-label\">Manager Name:</strong>\n          <span class=\"product-info\">{{ product.manager_name }}</span\n          ><br />\n\n          <strong class=\"product-label\">Price:</strong>\n          <span class=\"product-info\">{{ product.price }}</span\n          ><br />\n        </li>\n      </ul>\n    </div>\n    <div v-else>\n      <p class=\"no-products\">No products available for this category.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ViewProducts\",\n  data() {\n    return {\n      approvedCategories: [],\n      formData: {\n        category_name: \"\",\n      },\n      fta: {\n        category_name: \"\",\n      },\n      products: [],\n    };\n  },\n\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isUser() {\n      return this.account.roles.includes(\"<Role 1>\");\n    },\n  },\n  async mounted() {\n    const c_id = this.$route.params.category_id;\n    const response = await fetch(\n      `http://localhost:5000/api/getProducts/${c_id}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n    if (response.ok) {\n      this.products = Array.isArray(data) ? data : [];\n    } else {\n      alert(\"No Products Available\");\n    }\n  },\n};\n</script>\n<style scoped>\n.product-list {\n  max-width: 400px;\n  margin: 20px auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background: linear-gradient(to right, #a9f160, #87cefa);\n}\n\n.product-ul {\n  list-style: none;\n  padding: 0;\n}\n\n.product-item {\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n}\n\n.product-label {\n  font-weight: bold;\n  margin-right: 5px;\n}\n\n.no-products {\n  font-style: italic;\n  color: #777;\n}\n.back-button {\n  display: inline-block;\n  margin-top: 10px;\n  padding: 8px 16px;\n  text-decoration: none;\n  background-color: #333;\n  color: white;\n  border-radius: 4px;\n  cursor: pointer;\n}\n</style>\n"],"mappings":"AAgCA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,kBAAkB,EAAE,EAAE;MACtBC,QAAQ,EAAE;QACRC,aAAa,EAAE;MACjB,CAAC;MACDC,GAAG,EAAE;QACHD,aAAa,EAAE;MACjB,CAAC;MACDE,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,gBAAgB;IAC3C,CAAC;IACDG,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,aAAa;IACxC,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACH,MAAM,CAACC,KAAK,CAACG,eAAe;IAC1C,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,OAAO,CAACC,KAAK,CAACC,QAAQ,CAAC,UAAU,CAAC;IAChD;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,IAAG,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,WAAW;IAC3C,MAAMC,QAAO,GAAI,MAAMC,KAAK,CACzB,yCAAwCL,IAAK,EAAC,EAC/C;MACEM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,sBAAsB,EAAEC,YAAY,CAACC,OAAO,CAAC,YAAY;MAC3D;IACF,CACF,CAAC;IACD,MAAM3B,IAAG,GAAI,MAAMsB,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC9B,IAAI,CAAC;IACjB,IAAIsB,QAAQ,CAACS,EAAE,EAAE;MACf,IAAI,CAAC1B,QAAO,GAAI2B,KAAK,CAACC,OAAO,CAACjC,IAAI,IAAIA,IAAG,GAAI,EAAE;IACjD,OAAO;MACLkC,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}