{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-profile-container\"\n};\nconst _hoisted_2 = {\n  class: \"profile-details\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"User Profile\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Email:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.account.email), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Username:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.account.username), 1 /* TEXT */)])]), _createVNode(_component_router_link, {\n    to: \"/boughtProducts\",\n    class: \"logout-link\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Orders\")])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$data","account","email","username","_createVNode","_component_router_link","to","_cache"],"sources":["C:\\Users\\mahak\\Downloads\\21f2000845-freshcart main\\Mad 2 project\\freshcart\\src\\components\\userProfile.vue"],"sourcesContent":["<!-- UserProfile.vue -->\n<template>\n  <div class=\"user-profile-container\">\n    <h2>User Profile</h2>\n    <div class=\"profile-details\">\n      <p><strong>Email:</strong> {{ account.email }}</p>\n      <p><strong>Username:</strong> {{ account.username }}</p>\n    </div>\n    <router-link to=\"/boughtProducts\" class=\"logout-link\">Orders</router-link>\n  </div>\n</template>\n\n<style scoped>\n.user-profile-container {\n  max-width: 400px;\n  margin: 20px auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background: linear-gradient(to right, #a9f160, #87cefa);\n}\n\nh2 {\n  text-align: center;\n  color: #333;\n}\n\n.profile-details {\n  margin-bottom: 20px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n}\n\np {\n  margin: 8px 0;\n}\n\n.logout-link {\n  display: inline-block;\n  padding: 8px 16px;\n  background-color: #007bff;\n  color: #fff;\n  text-decoration: none;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n}\n\n.logout-link:hover {\n  background-color: #0056b3;\n}\n</style>\n\n<script>\nexport default {\n  name: \"UserProfile\",\n  data() {\n    return {\n      account: {\n        email: \"\",\n        username: \"\",\n      },\n    };\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isUser() {\n      return this.account.roles.includes(\"<Role 2>\");\n    },\n  },\n  async mounted() {\n    try {\n      const email = this.$store.state.currentUserEmail;\n      const response = await fetch(\n        `http://localhost:5000/api/getUserData/${email}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n          },\n        }\n      );\n      const data = await response.json();\n      if (response.ok) {\n        this.account = data;\n      } else {\n        console.error(\"Failed to fetch user details\");\n      }\n    } catch (error) {\n      console.error(\"An error occurred while fetching user details\", error);\n      this.$router.push(\"/\");\n    }\n  },\n};\n</script>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAwB;;EAE5BA,KAAK,EAAC;AAAiB;;;uBAF9BC,mBAAA,CAOM,OAPNC,UAOM,G,0BANJC,mBAAA,CAAqB,YAAjB,cAAY,sBAChBA,mBAAA,CAGM,OAHNC,UAGM,GAFJD,mBAAA,CAAkD,Y,0BAA/CA,mBAAA,CAAuB,gBAAf,QAAM,sB,iBAAS,GAAC,GAAAE,gBAAA,CAAGC,KAAA,CAAAC,OAAO,CAACC,KAAK,iB,GAC3CL,mBAAA,CAAwD,Y,0BAArDA,mBAAA,CAA0B,gBAAlB,WAAS,sB,iBAAS,GAAC,GAAAE,gBAAA,CAAGC,KAAA,CAAAC,OAAO,CAACE,QAAQ,iB,KAEnDC,YAAA,CAA0EC,sBAAA;IAA7DC,EAAE,EAAC,iBAAiB;IAACZ,KAAK,EAAC;;sBAAc,MAAMa,MAAA,QAAAA,MAAA,O,iBAAN,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}