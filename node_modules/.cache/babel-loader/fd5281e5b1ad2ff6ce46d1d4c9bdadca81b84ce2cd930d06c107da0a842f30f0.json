{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"AdminDashboard\",\n  data() {\n    return {\n      account: {\n        username: \"\",\n        email: \"\",\n        id: null,\n        roles: []\n      },\n      requests: [],\n      cat_requests: [],\n      cat_update_requests: [],\n      cat_delete_requests: [],\n      categories: [],\n      showCategoryForm: false,\n      showeditCategoryForm: false,\n      formData: {\n        category_name: \"\"\n      },\n      categoryNames: {},\n      error: \"Something Went Wrong\"\n    };\n  },\n  async mounted() {\n    const email = this.$route.params.email;\n    const resaccount = await fetch(`http://localhost:5000/api/getUserData/${email}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n      }\n    });\n    const dataaccount = await resaccount.json();\n    console.log(dataaccount);\n    if (resaccount.ok) {\n      this.account = dataaccount;\n      this.$store.commit(\"setCurrentUser\", {\n        id: dataaccount.id,\n        username: dataaccount.username,\n        email: dataaccount.email,\n        roles: dataaccount.roles\n      });\n      console.log(\"setting done!\");\n    } else if (resaccount.status == 401) {\n      this.success = false;\n      this.error = dataaccount.response.error;\n    } else {\n      this.success = false;\n      this.error = dataaccount.message;\n      alert(\"something went wrong\");\n      this.$router.push(\"/\");\n      localStorage.clear();\n    }\n    const response = await fetch(`http://localhost:5000/api/admin_dashboard/${email}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    if (response.ok) {\n      this.requests = Array.isArray(data) ? data : [];\n    } else {\n      this.error = data.message;\n      alert(this.error);\n      this.$router.push(\"/\");\n    }\n    const cr_response = await fetch(\"http://localhost:5000/api/categoryRequests\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n      }\n    });\n    const cat_data = await cr_response.json();\n    console.log(cat_data);\n    if (cr_response.ok) {\n      this.cat_requests = Array.isArray(cat_data) ? cat_data : [];\n    }\n    const cur_response = await fetch(\"http://localhost:5000/api/categoryUpdateRequests\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n      }\n    });\n    const cat_update_data = await cur_response.json();\n    console.log(cat_update_data);\n    if (cur_response.ok) {\n      this.cat_update_requests = Array.isArray(cat_update_data) ? cat_update_data : [];\n    }\n    const cdr_response = await fetch(\"http://localhost:5000/api/categoryDeleteRequests\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n      }\n    });\n    const cat_delete_data = await cdr_response.json();\n    console.log(cat_delete_data);\n    if (cdr_response.ok) {\n      this.cat_delete_requests = Array.isArray(cat_delete_data) ? cat_delete_data : [];\n    }\n    const c_response = await fetch(\"http://localhost:5000/api/getCategory\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n      }\n    });\n    const c_data = await c_response.json();\n    console.log(c_data);\n    if (c_response.ok) {\n      this.categories = Array.isArray(c_data) ? c_data : [];\n    }\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isProductOwner() {\n      return this.$store.state.currentUserId == this.product.user_id;\n    },\n    isUser() {\n      return this.account.roles.includes(\"<Role 2>\");\n    }\n  },\n  methods: {\n    viewProducts(categoryId) {\n      this.$router.push(`/getProductsPage/${categoryId}`);\n    },\n    async declineCatRequest(requestId) {\n      try {\n        const shouldDecline = window.confirm(\"Are you sure you want to decline the category request?\");\n        if (!shouldDecline) {\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/declineCatRequest/${requestId}`, {\n          method: \"delete\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          this.cat_requests = data.requests;\n          alert(\"Successfully Deleted Request\");\n        } else {\n          alert(\"Something went wrong\");\n        }\n      } catch {\n        alert(\"Something went wrong\");\n      }\n    },\n    async declineCatDeleteRequest(categoryId) {\n      try {\n        const shouldDecline = window.confirm(\"Are you sure you want to decline the deletion request for this category?\");\n        if (!shouldDecline) {\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/declineCatDeleteRequest/${categoryId}`, {\n          method: \"delete\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          this.cat_delete_requests = data.requests;\n          alert(\"Successfully Deleted Request\");\n        } else {\n          alert(\"Something went wrong\");\n        }\n      } catch {\n        alert(\"Something went wrong\");\n      }\n    },\n    async declineRequest(requestId) {\n      try {\n        const shouldDecline = window.confirm(\"Are you sure you want to decline the request?\");\n        if (!shouldDecline) {\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/declineRequest/${requestId}`, {\n          method: \"delete\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          this.requests = data;\n          alert(\"Successfully Deleted Request\");\n        } else {\n          alert(\"Something went wrong\");\n        }\n      } catch {\n        alert(\"Something went wrong\");\n      }\n    },\n    async approveCatRequest(requestId) {\n      try {\n        const shouldApprove = window.confirm(\"Are you sure you want to approve the category request?\");\n        if (!shouldApprove) {\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/approveCatRequest/${requestId}`, {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          this.cat_requests = data.requests;\n          this.categories = data.categories;\n        } else {\n          alert(\"Category Already Exists\");\n        }\n      } catch {\n        alert(\"Soomething went wrong\");\n      }\n    },\n    async declineCatUpdateRequest(categoryId) {\n      try {\n        const shouldDecline = window.confirm(\"Are you sure you want to decline the update request for this category?\");\n        if (!shouldDecline) {\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/declineCatUpdateRequest/${categoryId}`, {\n          method: \"delete\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          this.cat_update_requests = data.requests;\n          alert(\"Successfully Deleted Request\");\n        } else {\n          alert(\"Something went wrong\");\n        }\n      } catch {\n        alert(\"Something went wrong\");\n      }\n    },\n    async approveRequest(requestId) {\n      try {\n        const shouldApprove = window.confirm(\"Are you sure you want to approve the request?\");\n        if (!shouldApprove) {\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/approveRequest/${requestId}`, {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          this.requests = data;\n        } else {\n          alert(\"Something went wrong\");\n        }\n      } catch {\n        alert(\"Soomething went wrong\");\n      }\n    },\n    async approveCatDeleteRequest(categoryId) {\n      try {\n        const shouldApprove = window.confirm(\"Are you sure you want to approve the deletion request for this category?\");\n        if (!shouldApprove) {\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/approveCatDeleteRequest/${categoryId}`, {\n          method: \"delete\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          this.cat_delete_requests = data.requests;\n          this.categories = data.categories;\n        } else {\n          alert(data.error);\n        }\n      } catch {\n        alert(\"Something went wrong\");\n      }\n    },\n    async approveCatUpdateRequest(categoryId) {\n      try {\n        const shouldApprove = window.confirm(\"Are you sure you want to approve the update request for this category?\");\n        if (!shouldApprove) {\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/approveCatUpdateRequest/${categoryId}`, {\n          method: \"put\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          this.cat_update_requests = data.requests;\n          this.categories = data.categories;\n        } else {\n          alert(\"Category Already Exists\");\n        }\n      } catch {\n        alert(\"Soomething went wrong\");\n      }\n    },\n    showAddCategoryForm() {\n      this.showCategoryForm = !this.showCategoryForm;\n    },\n    showEditCategoryForm() {\n      this.showeditCategoryForm = !this.showeditCategoryForm;\n    },\n    async addCategory() {\n      if (!this.formData.category_name.trim()) {\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"category_name\", this.formData.category_name);\n      const shouldAdd = window.confirm(\"Are you sure you want to add this category?\");\n      if (!shouldAdd) return;\n      try {\n        const response = await fetch(\"http://localhost:5000/api/addCategory\", {\n          method: \"POST\",\n          body: formData,\n          headers: {\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.categories.push(data.newCategory);\n          this.showCategoryForm = false; // Close form after adding\n          this.formData.category_name = \"\";\n        } else {\n          alert(\"Something went wrong. Try again.\");\n        }\n      } catch (error) {\n        alert(\"An error occurred while adding the category.\");\n      }\n    },\n    async editcategory(c_id) {\n      try {\n        const categoryInput = this.categoryNames[c_id];\n        if (!categoryInput) {\n          alert(\"Please enter a category name before editing.\");\n          return;\n        }\n        const categoryName = categoryInput.trim();\n        if (!categoryName) {\n          alert(\"Please enter a non-empty category name before editing.\");\n          return;\n        }\n        const shouldEdit = window.confirm(\"Are you sure you want to edit this category?\");\n        if (!shouldEdit) {\n          return;\n        }\n        const formdata = new FormData();\n        formdata.append(\"category_name\", categoryName);\n        const response = await fetch(`http://localhost:5000/api/editCategory/${c_id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          },\n          body: formdata\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          alert(\"Category updated successfully!\");\n          this.categoryNames[c_id] = \"\";\n          this.categories = data.categories;\n        } else {\n          alert(\"category Already Exists\");\n        }\n      } catch {\n        alert(\"Soomething went wrong\");\n      }\n    },\n    async checkCategoryExists(categoryName) {\n      try {\n        const response = await fetch(`http://localhost:5000/api/checkCategoryExists?category_name=${categoryName}`, {\n          method: \"get\",\n          headers: {\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        return data.exists;\n      } catch {\n        return false;\n      }\n    },\n    async deleteCategory(c_id) {\n      try {\n        const shouldDelete = window.confirm(\"Are you sure you want to delete this category?\");\n        if (!shouldDelete) {\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/deleteCategory/${c_id}`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          this.categories = data.categories;\n        } else {\n          const data = await response.json();\n          alert(data.error);\n        }\n      } catch {\n        alert(\"Failed to delete\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","account","username","email","id","roles","requests","cat_requests","cat_update_requests","cat_delete_requests","categories","showCategoryForm","showeditCategoryForm","formData","category_name","categoryNames","error","mounted","$route","params","resaccount","fetch","headers","localStorage","getItem","dataaccount","json","console","log","ok","$store","commit","status","success","response","message","alert","$router","push","clear","method","Array","isArray","cr_response","cat_data","cur_response","cat_update_data","cdr_response","cat_delete_data","c_response","c_data","computed","currentUserEmail","state","currentUserId","currentUserName","currentUsername","isProductOwner","product","user_id","isUser","includes","methods","viewProducts","categoryId","declineCatRequest","requestId","shouldDecline","window","confirm","declineCatDeleteRequest","declineRequest","approveCatRequest","shouldApprove","declineCatUpdateRequest","approveRequest","approveCatDeleteRequest","approveCatUpdateRequest","showAddCategoryForm","showEditCategoryForm","addCategory","trim","FormData","append","shouldAdd","body","newCategory","editcategory","c_id","categoryInput","categoryName","shouldEdit","formdata","checkCategoryExists","exists","deleteCategory","shouldDelete"],"sources":["C:\\Users\\mahak\\Downloads\\21f2000845-freshcart\\Mad 2 project\\freshcart\\src\\components\\admin_dashboard.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav class=\"navbar\">\n      <h1 class=\"dashboard-title\">Admin Dashboard</h1>\n      <router-link\n        to=\"/\"\n        @click=\"logout\"\n        class=\"logout-link bi bi-box-arrow-in-right\"\n      ></router-link>\n    </nav>\n\n    <section class=\"dashboard-section\">\n      <div class=\"request-section\">\n        <h3>Manager Requests</h3>\n        <div v-if=\"requests.length !== 0\">\n          <ol class=\"category-list\">\n            <li v-for=\"request in requests\" :key=\"request.request_id\">\n              <span>\n                <strong>Requester's Username:</strong>\n                {{ request.requesters_name }}</span\n              >\n              <div>\n                <button\n                  class=\"edit\"\n                  @click=\"approveRequest(request.request_id)\"\n                >\n                  Approve\n                </button>\n                <button\n                  class=\"delete\"\n                  @click=\"declineRequest(request.request_id)\"\n                >\n                  Decline\n                </button>\n              </div>\n            </li>\n            <br />\n          </ol>\n        </div>\n        <div v-else>\n          <p>No requests available.</p>\n        </div>\n      </div>\n\n      <div class=\"request-section\">\n        <h3>Category Requests</h3>\n        <div v-if=\"cat_requests.length !== 0\">\n          <ul>\n            <li v-for=\"request in cat_requests\" :key=\"request.req_id\">\n              <span\n                ><strong>Requester's Username:</strong>\n                {{ request.requesters_name }}\n                <br />\n                <strong>Requested Category:</strong>\n                {{ request.category_name }}</span\n              >\n              <div>\n                <button class=\"edit\" @click=\"approveCatRequest(request.req_id)\">\n                  Approve\n                </button>\n                <button\n                  class=\"delete\"\n                  @click=\"declineCatRequest(request.req_id)\"\n                >\n                  Decline\n                </button>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div v-else>\n          <p>No requests available.</p>\n        </div>\n      </div>\n\n      <div class=\"request-section\">\n        <h3>Category Update Requests</h3>\n        <div v-if=\"cat_update_requests.length !== 0\">\n          <ul>\n            <li\n              v-for=\"request in cat_update_requests\"\n              :key=\"request.category_id\"\n            >\n              <span\n                ><strong>Requester's Username:</strong>\n                {{ request.requesters_name }} <br /><strong\n                  >Requested Category name:</strong\n                >\n                {{ request.category_name }}<br /><strong\n                  >Requested Category to Edit:</strong\n                >\n                {{ request.category_old_name }}</span\n              >\n              <div>\n                <button\n                  class=\"edit\"\n                  @click=\"approveCatUpdateRequest(request.category_id)\"\n                >\n                  Approve\n                </button>\n                <button\n                  class=\"delete\"\n                  @click=\"declineCatUpdateRequest(request.category_id)\"\n                >\n                  Decline\n                </button>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div v-else>\n          <p class=\"no-requests\">No requests available.</p>\n        </div>\n      </div>\n\n      <div class=\"request-section\">\n        <h3>Category Delete Requests</h3>\n        <div v-if=\"cat_delete_requests.length !== 0\">\n          <ul>\n            <li\n              v-for=\"request in cat_delete_requests\"\n              :key=\"request.category_id\"\n            >\n              <span\n                ><strong>Requester's Username:</strong>\n                {{ request.requesters_name }} <br />\n                <strong>Requested Category:</strong> {{ request.category_name }}\n              </span>\n              <div>\n                <button\n                  class=\"edit\"\n                  @click=\"approveCatDeleteRequest(request.category_id)\"\n                >\n                  Approve\n                </button>\n                <button\n                  class=\"delete\"\n                  @click=\"declineCatDeleteRequest(request.category_id)\"\n                >\n                  Decline\n                </button>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div v-else>\n          <p>No requests available.</p>\n        </div>\n      </div>\n\n      <div class=\"category-section\">\n        <h3>Add Category</h3>\n        <button @click=\"showAddCategoryForm\">Add New Category</button>\n\n        <div v-if=\"showCategoryForm\" class=\"category-form\">\n          <form @submit.prevent=\"addCategory\">\n            <label for=\"category_name\">Category Name:</label>\n            <input type=\"text\" v-model=\"formData.category_name\" required />\n            <input type=\"file\" @change=\"handleFileChange\" />\n\n            <button type=\"submit\">Add Category</button>\n          </form>\n        </div>\n      </div>\n      <div class=\"category-section\">\n        <h3>Categories</h3>\n        <ul v-if=\"categories.length !== 0\">\n          <li v-for=\"category in categories\" :key=\"category.id\">\n            {{ category.name }}\n            <div>\n              <label for=\"category_name\">Category Name:</label>\n              <input\n                type=\"text\"\n                v-model=\"categoryNames[category.id]\"\n                required\n              />\n              <button class=\"edit\" @click.prevent=\"editcategory(category.id)\">\n                Edit\n              </button>\n            </div>\n            <button class=\"delete\" @click=\"deleteCategory(category.id)\">\n              Delete\n            </button>\n            <button class=\"edit\" @click=\"viewProducts(category.id)\">\n              View Products\n            </button>\n          </li>\n        </ul>\n        <p v-else>No category available.</p>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AdminDashboard\",\n  data() {\n    return {\n      account: {\n        username: \"\",\n        email: \"\",\n        id: null,\n        roles: [],\n      },\n      requests: [],\n      cat_requests: [],\n      cat_update_requests: [],\n      cat_delete_requests: [],\n      categories: [],\n      showCategoryForm: false,\n      showeditCategoryForm: false,\n      formData: {\n        category_name: \"\",\n      },\n      categoryNames: {},\n      error: \"Something Went Wrong\",\n    };\n  },\n  async mounted() {\n    const email = this.$route.params.email;\n    const resaccount = await fetch(\n      `http://localhost:5000/api/getUserData/${email}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n      }\n    );\n    const dataaccount = await resaccount.json();\n    console.log(dataaccount);\n    if (resaccount.ok) {\n      this.account = dataaccount;\n      this.$store.commit(\"setCurrentUser\", {\n        id: dataaccount.id,\n        username: dataaccount.username,\n        email: dataaccount.email,\n        roles: dataaccount.roles,\n      });\n      console.log(\"setting done!\");\n    } else if (resaccount.status == 401) {\n      this.success = false;\n      this.error = dataaccount.response.error;\n    } else {\n      this.success = false;\n      this.error = dataaccount.message;\n      alert(\"something went wrong\");\n      this.$router.push(\"/\");\n      localStorage.clear();\n    }\n    const response = await fetch(\n      `http://localhost:5000/api/admin_dashboard/${email}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n    if (response.ok) {\n      this.requests = Array.isArray(data) ? data : [];\n    } else {\n      this.error = data.message;\n      alert(this.error);\n      this.$router.push(\"/\");\n    }\n\n    const cr_response = await fetch(\n      \"http://localhost:5000/api/categoryRequests\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n      }\n    );\n    const cat_data = await cr_response.json();\n    console.log(cat_data);\n    if (cr_response.ok) {\n      this.cat_requests = Array.isArray(cat_data) ? cat_data : [];\n    }\n\n    const cur_response = await fetch(\n      \"http://localhost:5000/api/categoryUpdateRequests\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n      }\n    );\n    const cat_update_data = await cur_response.json();\n    console.log(cat_update_data);\n    if (cur_response.ok) {\n      this.cat_update_requests = Array.isArray(cat_update_data)\n        ? cat_update_data\n        : [];\n    }\n\n    const cdr_response = await fetch(\n      \"http://localhost:5000/api/categoryDeleteRequests\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n      }\n    );\n    const cat_delete_data = await cdr_response.json();\n    console.log(cat_delete_data);\n    if (cdr_response.ok) {\n      this.cat_delete_requests = Array.isArray(cat_delete_data)\n        ? cat_delete_data\n        : [];\n    }\n\n    const c_response = await fetch(\"http://localhost:5000/api/getCategory\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n      },\n    });\n    const c_data = await c_response.json();\n    console.log(c_data);\n    if (c_response.ok) {\n      this.categories = Array.isArray(c_data) ? c_data : [];\n    }\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isProductOwner() {\n      return this.$store.state.currentUserId == this.product.user_id;\n    },\n    isUser() {\n      return this.account.roles.includes(\"<Role 2>\");\n    },\n  },\n\n  methods: {\n    viewProducts(categoryId) {\n      this.$router.push(`/getProductsPage/${categoryId}`);\n    },\n    async declineCatRequest(requestId) {\n      try {\n        const shouldDecline = window.confirm(\n          \"Are you sure you want to decline the category request?\"\n        );\n\n        if (!shouldDecline) {\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:5000/api/declineCatRequest/${requestId}`,\n          {\n            method: \"delete\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          this.cat_requests = data.requests;\n          alert(\"Successfully Deleted Request\");\n        } else {\n          alert(\"Something went wrong\");\n        }\n      } catch {\n        alert(\"Something went wrong\");\n      }\n    },\n    async declineCatDeleteRequest(categoryId) {\n      try {\n        const shouldDecline = window.confirm(\n          \"Are you sure you want to decline the deletion request for this category?\"\n        );\n\n        if (!shouldDecline) {\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:5000/api/declineCatDeleteRequest/${categoryId}`,\n          {\n            method: \"delete\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          this.cat_delete_requests = data.requests;\n          alert(\"Successfully Deleted Request\");\n        } else {\n          alert(\"Something went wrong\");\n        }\n      } catch {\n        alert(\"Something went wrong\");\n      }\n    },\n    async declineRequest(requestId) {\n      try {\n        const shouldDecline = window.confirm(\n          \"Are you sure you want to decline the request?\"\n        );\n\n        if (!shouldDecline) {\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:5000/api/declineRequest/${requestId}`,\n          {\n            method: \"delete\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          this.requests = data;\n          alert(\"Successfully Deleted Request\");\n        } else {\n          alert(\"Something went wrong\");\n        }\n      } catch {\n        alert(\"Something went wrong\");\n      }\n    },\n    async approveCatRequest(requestId) {\n      try {\n        const shouldApprove = window.confirm(\n          \"Are you sure you want to approve the category request?\"\n        );\n\n        if (!shouldApprove) {\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:5000/api/approveCatRequest/${requestId}`,\n          {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          this.cat_requests = data.requests;\n          this.categories = data.categories;\n        } else {\n          alert(\"Category Already Exists\");\n        }\n      } catch {\n        alert(\"Soomething went wrong\");\n      }\n    },\n    async declineCatUpdateRequest(categoryId) {\n      try {\n        const shouldDecline = window.confirm(\n          \"Are you sure you want to decline the update request for this category?\"\n        );\n\n        if (!shouldDecline) {\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:5000/api/declineCatUpdateRequest/${categoryId}`,\n          {\n            method: \"delete\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          this.cat_update_requests = data.requests;\n          alert(\"Successfully Deleted Request\");\n        } else {\n          alert(\"Something went wrong\");\n        }\n      } catch {\n        alert(\"Something went wrong\");\n      }\n    },\n\n    async approveRequest(requestId) {\n      try {\n        const shouldApprove = window.confirm(\n          \"Are you sure you want to approve the request?\"\n        );\n\n        if (!shouldApprove) {\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:5000/api/approveRequest/${requestId}`,\n          {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          this.requests = data;\n        } else {\n          alert(\"Something went wrong\");\n        }\n      } catch {\n        alert(\"Soomething went wrong\");\n      }\n    },\n\n    async approveCatDeleteRequest(categoryId) {\n      try {\n        const shouldApprove = window.confirm(\n          \"Are you sure you want to approve the deletion request for this category?\"\n        );\n\n        if (!shouldApprove) {\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:5000/api/approveCatDeleteRequest/${categoryId}`,\n          {\n            method: \"delete\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          this.cat_delete_requests = data.requests;\n          this.categories = data.categories;\n        } else {\n          alert(data.error);\n        }\n      } catch {\n        alert(\"Something went wrong\");\n      }\n    },\n    async approveCatUpdateRequest(categoryId) {\n      try {\n        const shouldApprove = window.confirm(\n          \"Are you sure you want to approve the update request for this category?\"\n        );\n\n        if (!shouldApprove) {\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:5000/api/approveCatUpdateRequest/${categoryId}`,\n          {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          this.cat_update_requests = data.requests;\n          this.categories = data.categories;\n        } else {\n          alert(\"Category Already Exists\");\n        }\n      } catch {\n        alert(\"Soomething went wrong\");\n      }\n    },\n\n    showAddCategoryForm() {\n      this.showCategoryForm = !this.showCategoryForm;\n    },\n    showEditCategoryForm() {\n      this.showeditCategoryForm = !this.showeditCategoryForm;\n    },\n    async addCategory() {\n      if (!this.formData.category_name.trim()) {\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"category_name\", this.formData.category_name);\n\n      const shouldAdd = window.confirm(\n        \"Are you sure you want to add this category?\"\n      );\n      if (!shouldAdd) return;\n\n      try {\n        const response = await fetch(\"http://localhost:5000/api/addCategory\", {\n          method: \"POST\",\n          body: formData,\n          headers: {\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n          },\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n          this.categories.push(data.newCategory);\n          this.showCategoryForm = false; // Close form after adding\n          this.formData.category_name = \"\";\n        } else {\n          alert(\"Something went wrong. Try again.\");\n        }\n      } catch (error) {\n        alert(\"An error occurred while adding the category.\");\n      }\n    },\n\n    async editcategory(c_id) {\n      try {\n        const categoryInput = this.categoryNames[c_id];\n\n        if (!categoryInput) {\n          alert(\"Please enter a category name before editing.\");\n          return;\n        }\n\n        const categoryName = categoryInput.trim();\n\n        if (!categoryName) {\n          alert(\"Please enter a non-empty category name before editing.\");\n          return;\n        }\n\n        const shouldEdit = window.confirm(\n          \"Are you sure you want to edit this category?\"\n        );\n\n        if (!shouldEdit) {\n          return;\n        }\n\n        const formdata = new FormData();\n        formdata.append(\"category_name\", categoryName);\n\n        const response = await fetch(\n          `http://localhost:5000/api/editCategory/${c_id}`,\n          {\n            method: \"PUT\",\n            headers: {\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n            body: formdata,\n          }\n        );\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          alert(\"Category updated successfully!\");\n          this.categoryNames[c_id] = \"\";\n          this.categories = data.categories;\n        } else {\n          alert(\"category Already Exists\");\n        }\n      } catch {\n        alert(\"Soomething went wrong\");\n      }\n    },\n    async checkCategoryExists(categoryName) {\n      try {\n        const response = await fetch(\n          `http://localhost:5000/api/checkCategoryExists?category_name=${categoryName}`,\n          {\n            method: \"get\",\n            headers: {\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        const data = await response.json();\n        return data.exists;\n      } catch {\n        return false;\n      }\n    },\n    async deleteCategory(c_id) {\n      try {\n        const shouldDelete = window.confirm(\n          \"Are you sure you want to delete this category?\"\n        );\n\n        if (!shouldDelete) {\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:5000/api/deleteCategory/${c_id}`,\n          {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          this.categories = data.categories;\n        } else {\n          const data = await response.json();\n          alert(data.error);\n        }\n      } catch {\n        alert(\"Failed to delete\");\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n#app {\n  margin: 10px;\n  padding: 20px;\n}\n\n.dashboard-title {\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: white;\n}\nspan {\n  color: #0b7939;\n}\nstrong {\n  color: black;\n}\n\n.navbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #4caf50;\n  color: white;\n  padding: 10px;\n}\n\n.logout-link {\n  color: white;\n  text-decoration: none;\n  padding: 5px 10px;\n  background-color: #333;\n  border-radius: 5px;\n}\n\n.dashboard-section {\n  margin: 20px;\n}\n\n.request-section,\n.category-section {\n  margin-bottom: 30px;\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background-color: whitesmoke;\n}\n\n.category-section button,\n.category-section input {\n  margin-top: 10px;\n}\n\n.request-section h3,\n.category-section h3 {\n  color: black;\n}\n\nli {\n  margin: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.request-section button.edit {\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 14px;\n  margin: 4px;\n  cursor: pointer;\n}\n\n.request-section button.delete {\n  background-color: red;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 14px;\n  margin: 4px;\n  cursor: pointer;\n}\n.category-section input {\n  margin-right: 10px;\n  padding: 8px;\n  box-sizing: border-box;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.category-section button {\n  background-color: #3498db;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  margin-top: 5px;\n}\n\n.category-list li {\n  list-style-type: circle;\n  margin: 5px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.category-section button.edit {\n  background-color: #2ecc71;\n}\n\n.category-section li {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.category-section div {\n  display: flex;\n  align-items: center;\n}\n\n.category-section button.delete {\n  background-color: #e74c3c;\n  margin-left: 10px;\n}\n\n.category-section p {\n  color: #888;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}