{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"UserDashboard\",\n  data() {\n    return {\n      account: {\n        username: \"\",\n        email: \"\",\n        id: null,\n        roles: []\n      },\n      Categories: [],\n      searchQuery: \"\"\n    };\n  },\n  async mounted() {\n    try {\n      const email = this.$route.params.email;\n      const resaccount = await fetch(`http://localhost:5000/api/getUserData/${email}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n        }\n      });\n      const dataaccount = await resaccount.json();\n      console.log(dataaccount);\n      if (resaccount.ok) {\n        this.account = dataaccount;\n        this.$store.commit(\"setCurrentUser\", {\n          id: dataaccount.id,\n          username: dataaccount.username,\n          email: dataaccount.email,\n          roles: dataaccount.roles\n        });\n        console.log(\"setting done!\");\n      } else if (resaccount.status == 401) {\n        this.success = false;\n        this.error = dataaccount.response.error;\n      } else {\n        this.success = false;\n        this.error = dataaccount.message;\n        alert(\"something went wrong\");\n        this.$router.push(\"/\");\n        localStorage.clear();\n      }\n      const response = await fetch(`http://localhost:5000/api/userDashboard`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      if (response.ok) {\n        this.Categories = Array.isArray(data) ? data : [];\n      }\n    } catch {\n      alert(\"Login Again\");\n    }\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isUser() {\n      return this.account.roles.includes(\"<Role 2>\");\n    }\n  }\n};","map":{"version":3,"names":["name","data","account","username","email","id","roles","Categories","searchQuery","mounted","$route","params","resaccount","fetch","headers","localStorage","getItem","dataaccount","json","console","log","ok","$store","commit","status","success","error","response","message","alert","$router","push","clear","method","Array","isArray","computed","currentUserEmail","state","currentUserId","currentUserName","currentUsername","isUser","includes"],"sources":["C:\\Users\\mahak\\Downloads\\21f2000845-freshcart\\Mad 2 project\\freshcart\\src\\components\\user_dashboard.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav class=\"navbar\">\n      <h1 class=\"dashboard-title\">{{ currentUserName }} Dashboard</h1>\n      <div class=\"search-section\">\n        <label for=\"search\" class=\"form-label\">Search:</label>\n        <router-link to=\"/searchProducts\"\n          ><input type=\"text\" class=\"form-input\"\n        /></router-link>\n      </div>\n      <router-link to=\"/cart-buy\" class=\"logout-link bi bi-cart4\">\n      </router-link>\n\n      <router-link to=\"/profile\" class=\"logout-link bi bi-person-circle\">\n      </router-link>\n      <router-link to=\"/\" class=\"logout-link\" @click=\"logout\">\n        Logout\n      </router-link>\n    </nav>\n\n    <div class=\"category-section\">\n      <h2 style=\"text-align: center; text-decoration: underline\">\n        Welcome To Freshcart\n      </h2>\n      <h3 style=\"text-align: center; text-decoration: underline\">\n        Happy Shopping\n      </h3>\n      <div v-if=\"Categories.length !== 0\" class=\"category-list\">\n        <div\n          v-for=\"category in Categories\"\n          :key=\"category.id\"\n          class=\"category-item\"\n        >\n          <h1 style=\"text-decoration: underline\">{{ category.name }}</h1>\n          <div v-if=\"category.products.length !== 0\" class=\"card-container\">\n            <div\n              v-for=\"product in category.products\"\n              :key=\"product.id\"\n              class=\"card\"\n            >\n              <div class=\"card-header\">\n                <h3 class=\"prod-name\">{{ product.name }}</h3>\n              </div>\n              <div class=\"card-body\">\n                <img\n                  v-if=\"product.image_url\"\n                  :src=\"product.image_url\"\n                  alt=\"Product Image\"\n                  class=\"product-image\"\n                />\n                <p v-else>No Image Available</p>\n                <p>\n                  <strong>Manufacture Date:</strong>\n                  {{\n                    product.manufacture_date\n                      ? product.manufacture_date\n                      : \"Not Available\"\n                  }}\n                </p>\n                <p>\n                  <strong> Expiry Date:</strong>\n                  {{\n                    product.expiry_date ? product.expiry_date : \"Not Available\"\n                  }}\n                </p>\n                <p><strong>Price:</strong> {{ product.price }}</p>\n                <p>\n                  <strong>Rate per Unit:</strong> {{ product.rate_per_unit }}\n                </p>\n                <p><strong>Manager Name:</strong> {{ product.manager_name }}</p>\n\n                <router-link\n                  v-if=\"product.stock > 0\"\n                  :to=\"{\n                    name: 'cart',\n                    params: {\n                      category_id: category.id,\n                      product_id: product.id,\n                    },\n                  }\"\n                  class=\"btn-success\"\n                >\n                  Add to Cart\n                </router-link>\n                <router-link\n                  v-if=\"product.stock > 0\"\n                  :to=\"{\n                    name: 'buy_product',\n                    params: {\n                      category_id: category.id,\n                      product_id: product.id,\n                    },\n                  }\"\n                  class=\"btn-success\"\n                >\n                  Buy Now\n                </router-link>\n                <p v-else class=\"out-of-stock\">Out of Stock</p>\n              </div>\n            </div>\n          </div>\n          <p v-else class=\"no-products\">\n            No products available inside this category.\n          </p>\n        </div>\n      </div>\n      <p v-else class=\"no-categories\">No products available.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"UserDashboard\",\n  data() {\n    return {\n      account: {\n        username: \"\",\n        email: \"\",\n        id: null,\n        roles: [],\n      },\n      Categories: [],\n      searchQuery: \"\",\n    };\n  },\n  async mounted() {\n    try {\n      const email = this.$route.params.email;\n      const resaccount = await fetch(\n        `http://localhost:5000/api/getUserData/${email}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n          },\n        }\n      );\n      const dataaccount = await resaccount.json();\n      console.log(dataaccount);\n      if (resaccount.ok) {\n        this.account = dataaccount;\n        this.$store.commit(\"setCurrentUser\", {\n          id: dataaccount.id,\n          username: dataaccount.username,\n          email: dataaccount.email,\n          roles: dataaccount.roles,\n        });\n        console.log(\"setting done!\");\n      } else if (resaccount.status == 401) {\n        this.success = false;\n        this.error = dataaccount.response.error;\n      } else {\n        this.success = false;\n        this.error = dataaccount.message;\n        alert(\"something went wrong\");\n        this.$router.push(\"/\");\n        localStorage.clear();\n      }\n      const response = await fetch(`http://localhost:5000/api/userDashboard`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n      });\n      const data = await response.json();\n      console.log(data);\n      if (response.ok) {\n        this.Categories = Array.isArray(data) ? data : [];\n      }\n    } catch {\n      alert(\"Login Again\");\n    }\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isUser() {\n      return this.account.roles.includes(\"<Role 2>\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  margin: 10px;\n  padding: 20px;\n}\n\n.dashboard-title {\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: white;\n}\n\n.navbar {\n  display: flex;\n  align-items: center;\n  background-color: #4caf50;\n  color: white;\n  padding: 10px;\n}\n\n.search-section {\n  display: flex;\n  align-items: center;\n  margin-right: 50px;\n  margin-left: 500px;\n}\n\n.form-label {\n  margin-right: 10px;\n}\n\n.form-input {\n  padding: 5px;\n  border: 1px solid #ccc;\n}\n\n.logout-link {\n  color: white;\n  text-decoration: none;\n  padding: 5px;\n  background-color: #333;\n  margin-left: 10px;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 5px;\n}\n\n.category-section {\n  margin: 20px;\n}\n\n.category-item {\n  margin-bottom: 20px;\n  padding: 12px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background: linear-gradient(to right, #a9f160, #87cefa);\n}\n\n.card-container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin: 10px;\n  background-color: whitesmoke;\n  overflow: hidden;\n}\n\n.card-header {\n  background-color: #c8c4c4;\n  padding: 10px;\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.prod-name {\n  margin: 0;\n}\n\n.btn-success {\n  padding: 8px;\n  margin: 10px;\n  display: inline-block;\n  text-decoration: none;\n  color: #fff;\n  background-color: #28a745;\n  cursor: pointer;\n}\n\n.out-of-stock {\n  color: red;\n  margin: 0;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}