{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"cart-container\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n    style: {\n      \"text-align\": \"center\"\n    }\n  }, \"Your Cart\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"cart-item\"\n    }, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, \"Product Name: \" + _toDisplayString(item.product_name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, \"Price: \" + _toDisplayString(item.product_price), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Quantity: \" + _toDisplayString(item.product_count), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeFromCart(item.product_id),\n      class: \"remove-button\"\n    }, \" Remove \", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => $options.editProductCount(item.product_id, item.newProductCount),\n      class: \"edit-button\"\n    }, \" Edit \", 8 /* PROPS */, _hoisted_4)])])])]);\n  }), 128 /* KEYED_FRAGMENT */)), $data.cartItems.length !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.promptBeforeBuy && $options.promptBeforeBuy(...args)),\n    class: \"buy-button\"\n  }, \"Buy All\"), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Total Amount:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.total_amount), 1 /* TEXT */)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"Your Cart is empty.\")), _createVNode(_component_router_link, {\n    to: '/user_dashboard/' + $options.currentUserEmail,\n    class: \"back-button\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Back to Dashboard\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","cartItems","item","key","id","_hoisted_2","_toDisplayString","product_name","product_price","product_count","onClick","$event","$options","removeFromCart","product_id","_hoisted_3","editProductCount","newProductCount","_hoisted_4","length","_hoisted_5","_cache","args","promptBeforeBuy","total_amount","_hoisted_6","_createVNode","_component_router_link","to","currentUserEmail"],"sources":["C:\\Users\\mahak\\Downloads\\21f2000845-freshcart main\\Mad 2 project\\freshcart\\src\\components\\cart_buy.vue"],"sourcesContent":["<template>\n  <div class=\"cart-container\">\n    <h2 style=\"text-align: center\">Your Cart</h2>\n    <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\n      <ul>\n        <li>\n          <div style=\"justify-content: space-between\">\n            <p>\n              <strong>Product Name: {{ item.product_name }}</strong>\n            </p>\n            <p>Price: {{ item.product_price }}</p>\n            <p>Quantity: {{ item.product_count }}</p>\n            <button\n              @click=\"removeFromCart(item.product_id)\"\n              class=\"remove-button\"\n            >\n              Remove\n            </button>\n            <button\n              @click=\"editProductCount(item.product_id, item.newProductCount)\"\n              class=\"edit-button\"\n            >\n              Edit\n            </button>\n          </div>\n        </li>\n      </ul>\n    </div>\n    <div v-if=\"cartItems.length !== 0\">\n      <button @click=\"promptBeforeBuy\" class=\"buy-button\">Buy All</button>\n      <p><strong>Total Amount:</strong> {{ total_amount }}</p>\n    </div>\n    <div v-else>Your Cart is empty.</div>\n    <router-link :to=\"'/user_dashboard/' + currentUserEmail\" class=\"back-button\"\n      >Back to Dashboard</router-link\n    >\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      total_amount: null,\n      product: {\n        stock: null,\n      },\n    };\n  },\n  async mounted() {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/cart\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n      });\n      const data = await response.json();\n      console.log(data);\n\n      if (response.ok) {\n        this.cartItems = data.cart;\n        this.total_amount = data.cart_price;\n      }\n    } catch (error) {\n      console.error(\"Error fetching cart items:\", error);\n      alert(\"Failed to fetch cart items. Please try again later.\");\n      this.$router.push(\"/\");\n    }\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isUser() {\n      return this.account.roles.includes(\"<Role 2>\");\n    },\n  },\n  methods: {\n    async removeFromCart(productId) {\n      try {\n        const shouldRemove = window.confirm(\n          \"Are you sure you want to remove this item from your cart?\"\n        );\n        if (!shouldRemove) {\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:5000/api/cart/${productId}`,\n          {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n\n        const data = await response.json();\n\n        if (response.ok) {\n          this.cartItems = this.cartItems.filter(\n            (item) => item.product_id !== productId\n          );\n          this.total_amount =\n            data.new_total_amount !== null ? data.new_total_amount : 0;\n\n          alert(\"Item removed from the cart\");\n          this.$router.push(`/user_dashboard/${this.currentUserEmail}`);\n        } else {\n          alert(\"Failed to remove item from the cart\");\n        }\n      } catch (error) {\n        console.error(\"Error removing item from cart:\", error);\n        alert(\"Item removed from the cart\");\n      }\n    },\n\n    async buyAll() {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/buyCart\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n          },\n        });\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          alert(\"Items successfully bought!\");\n          this.cartItems = [];\n          this.total_amount = 0;\n          this.$router.push(`/user_dashboard/${this.currentUserEmail}`);\n        } else {\n          alert(\"Failed to buy items. Please check your cart.\");\n        }\n      } catch (error) {\n        console.error(\"Error buying items:\", error);\n        alert(\"Failed to buy items. Please try again later.\");\n      }\n    },\n\n    promptBeforeBuy() {\n      const shouldBuy = window.confirm(\n        \"Are you sure you want to buy all items?\"\n      );\n      if (shouldBuy) {\n        this.buyAll();\n      }\n    },\n\n    async editProductCount(productId, currentProductCount) {\n      try {\n        const newProductCount = window.prompt(\n          \"Enter the new quantity:\",\n          currentProductCount\n        );\n\n        if (newProductCount !== null && !isNaN(newProductCount)) {\n          const response = await fetch(\n            `http://localhost:5000/api/cart/${productId}`,\n            {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n              },\n              body: JSON.stringify({\n                product_count: parseInt(newProductCount),\n              }),\n            }\n          );\n\n          const data = await response.json();\n          console.log(data);\n\n          if (data.message === \"Product count updated successfully\") {\n            const updatedItem = this.cartItems.find(\n              (item) => item.product_id === productId\n            );\n            if (updatedItem) {\n              updatedItem.product_count = parseInt(newProductCount);\n            }\n            alert(\"Product count updated successfully\");\n          } else {\n            alert(`Failed to update product count: ${data.message}`);\n          }\n        } else {\n          alert(\"Invalid input. Please enter a valid number.\");\n        }\n      } catch (error) {\n        console.error(\"Error editing product count:\", error);\n        alert(\"Failed to edit product count. Please try again later.\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.cart-container {\n  width: 40%;\n  margin: 20px auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background: linear-gradient(to right, #a9f160, #87cefa);\n}\n\nh2 {\n  color: #333;\n}\n\n.cart-item {\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n}\n\n.remove-button {\n  background-color: #dc3545;\n  color: white;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.edit-button {\n  background-color: #35dc4b;\n  color: white;\n  padding: 5px 10px;\n  border: none;\n  margin-left: 5px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.buy-button {\n  background-color: #28a745;\n  color: white;\n  margin-right: 10px;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.back-button {\n  display: inline-block;\n  margin-top: 10px;\n  padding: 8px 16px;\n  text-decoration: none;\n  background-color: #333;\n  color: white;\n  border-radius: 4px;\n  cursor: pointer;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAKdC,KAAsC,EAAtC;IAAA;EAAA;AAAsC;;;;;;;;;;;uBALnDC,mBAAA,CAmCM,OAnCNC,UAmCM,G,0BAlCJC,mBAAA,CAA6C;IAAzCH,KAA0B,EAA1B;MAAA;IAAA;EAA0B,GAAC,WAAS,uB,kBACxCC,mBAAA,CAwBMG,SAAA,QAAAC,WAAA,CAxBcC,KAAA,CAAAC,SAAS,EAAjBC,IAAI;yBAAhBP,mBAAA,CAwBM;MAxB0BQ,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEX,KAAK,EAAC;QAClDI,mBAAA,CAsBK,aArBHA,mBAAA,CAoBK,aAnBHA,mBAAA,CAkBM,OAlBNQ,UAkBM,GAjBJR,mBAAA,CAEI,YADFA,mBAAA,CAAsD,gBAA9C,gBAAc,GAAAS,gBAAA,CAAGJ,IAAI,CAACK,YAAY,iB,GAE5CV,mBAAA,CAAsC,WAAnC,SAAO,GAAAS,gBAAA,CAAGJ,IAAI,CAACM,aAAa,kBAC/BX,mBAAA,CAAyC,WAAtC,YAAU,GAAAS,gBAAA,CAAGJ,IAAI,CAACO,aAAa,kBAClCZ,mBAAA,CAKS;MAJNa,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,CAACX,IAAI,CAACY,UAAU;MACtCrB,KAAK,EAAC;OACP,UAED,iBAAAsB,UAAA,GACAlB,mBAAA,CAKS;MAJNa,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAI,gBAAgB,CAACd,IAAI,CAACY,UAAU,EAAEZ,IAAI,CAACe,eAAe;MAC9DxB,KAAK,EAAC;OACP,QAED,iBAAAyB,UAAA,E;kCAKGlB,KAAA,CAAAC,SAAS,CAACkB,MAAM,U,cAA3BxB,mBAAA,CAGM,OAAAyB,UAAA,GAFJvB,mBAAA,CAAoE;IAA3Da,OAAK,EAAAW,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEV,QAAA,CAAAW,eAAA,IAAAX,QAAA,CAAAW,eAAA,IAAAD,IAAA,CAAe;IAAE7B,KAAK,EAAC;KAAa,SAAO,GAC3DI,mBAAA,CAAwD,Y,0BAArDA,mBAAA,CAA8B,gBAAtB,eAAa,sB,iBAAS,GAAC,GAAAS,gBAAA,CAAGN,KAAA,CAAAwB,YAAY,iB,sBAEnD7B,mBAAA,CAAqC,OAAA8B,UAAA,EAAzB,qBAAmB,IAC/BC,YAAA,CAECC,sBAAA;IAFaC,EAAE,uBAAuBhB,QAAA,CAAAiB,gBAAgB;IAAEpC,KAAK,EAAC;;sBAC5D,MAAiB4B,MAAA,QAAAA,MAAA,O,iBAAjB,mBAAiB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}