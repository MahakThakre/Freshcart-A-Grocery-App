{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  name: \"ManagerDashboard\",\n  data() {\n    return {\n      account: {\n        username: \"\",\n        email: \"\",\n        id: null,\n        roles: []\n      },\n      approvedCategories: [],\n      formData: {\n        category_name: \"\",\n        category_image: null\n      }\n    };\n  },\n  async mounted() {\n    const email = this.$route.params.email;\n    const resaccount = await fetch(`http://localhost:5000/api/getUserData/${email}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n      }\n    });\n    const dataaccount = await resaccount.json();\n    console.log(dataaccount);\n    if (resaccount.ok) {\n      this.account = dataaccount;\n      this.$store.commit(\"setCurrentUser\", {\n        id: dataaccount.id,\n        username: dataaccount.username,\n        email: dataaccount.email,\n        roles: dataaccount.roles\n      });\n      console.log(\"setting done!\");\n    } else if (resaccount.status == 401) {\n      this.success = false;\n      this.error = dataaccount.response.error;\n    } else {\n      this.success = false;\n      this.error = dataaccount.message;\n      alert(\"something went wrong\");\n      this.$router.push(\"/\");\n      localStorage.clear();\n    }\n    const c_response = await fetch(\"http://localhost:5000/api/getCategory\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n      }\n    });\n    const c_data = await c_response.json();\n    console.log(c_data);\n    if (c_response.ok && this.account.roles.includes(\"<Role 2>\")) {\n      this.approvedCategories = Array.isArray(c_data) ? c_data : [];\n    } else {\n      alert(\"Something went wrong\");\n      this.$router.push(\"/\");\n    }\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isManager() {\n      return this.account.roles.includes(\"<Role 2>\");\n    }\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.formData.category_image = event.target.files[0];\n    },\n    async createCategory() {\n      const shouldCreate = window.confirm(\"Are you sure you want to create this category request?\");\n      if (!shouldCreate) {\n        return;\n      }\n      try {\n        const formdata = new FormData();\n        formdata.append(\"category_name\", this.formData.category_name);\n        if (this.formData.category_image) {\n          formdata.append(\"category_image\", this.formData.category_image);\n        }\n        const response = await fetch(\"http://localhost:5000/api/addCategory\", {\n          method: \"post\",\n          headers: {\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          },\n          body: formdata\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          alert(\"Category creation request sent successfully!\");\n          this.formData.category_name = \"\";\n          this.formData.category_image = null;\n        } else {\n          alert(\"Failed to send category creation request, Category Already Exists\");\n          this.formData.category_name = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error creating category:\", error);\n        alert(\"An error occurred while creating the category.\");\n      }\n    },\n    async deleteCategory(c_id) {\n      const shouldDelete = window.confirm(\"Are you sure you want to delete this category request?\");\n      if (!shouldDelete) {\n        return;\n      }\n      try {\n        const response = await fetch(`http://localhost:5000/api/deleteCategory/${c_id}`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          alert(\"Delete Request Sent Successfully\");\n          this.categories = data.categories;\n        } else {\n          alert(\"Unable to send delete request.Try again!\");\n        }\n      } catch (error) {\n        console.error(error);\n        alert(\"Failed to send delete request. Try again!\");\n      }\n    },\n    async exportManagerCSV() {\n      try {\n        const user_id = this.$store.state.currentUserId;\n        const response = await fetch(`http://localhost:5000/export_manager_csv/${user_id}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n          },\n          responseType: \"blob\"\n        });\n        if (response.ok) {\n          const csvShop = await response.blob();\n          const csvUrl = URL.createObjectURL(csvShop);\n          const a = document.createElement(\"a\");\n          a.href = csvUrl;\n          a.download = `${user_id}_data.csv`;\n          a.click();\n          alert(\"CSV export job started\");\n        } else {\n          alert(\"Failed to start CSV export job\");\n        }\n      } catch (error) {\n        console.error(error);\n        alert(\"Failed to start CSV export job\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","account","username","email","id","roles","approvedCategories","formData","category_name","category_image","mounted","$route","params","resaccount","fetch","headers","localStorage","getItem","dataaccount","json","console","log","ok","$store","commit","status","success","error","response","message","alert","$router","push","clear","c_response","method","c_data","includes","Array","isArray","computed","currentUserEmail","state","currentUserId","currentUserName","currentUsername","isManager","methods","handleImageUpload","event","target","files","createCategory","shouldCreate","window","confirm","formdata","FormData","append","body","deleteCategory","c_id","shouldDelete","categories","exportManagerCSV","user_id","responseType","csvShop","blob","csvUrl","URL","createObjectURL","a","document","createElement","href","download","click"],"sources":["C:\\Users\\mahak\\Downloads\\21f2000845-freshcart\\Mad 2 project\\freshcart\\src\\components\\manager_dashboard.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav class=\"navbar\">\n      <h1 class=\"dashboard-title\">Manager Dashboard</h1>\n      <router-link to=\"/\" class=\"logout-link\" @click=\"logout\">\n        Logout\n      </router-link>\n    </nav>\n\n    <div class=\"category-section\">\n      <h2>Create Categories</h2>\n      <ul v-if=\"approvedCategories.length !== 0\" class=\"category-list\">\n        <li\n          v-for=\"category in approvedCategories\"\n          :key=\"category.id\"\n          class=\"category-item\"\n        >\n          <router-link\n            :to=\"{\n              name: 'category_products',\n              params: { category_id: category.id },\n            }\"\n            class=\"category-link\"\n          >\n            <strong> {{ category.name }}</strong>\n          </router-link>\n          <button @click.prevent=\"deleteCategory(category.id)\" class=\"delete\">\n            Delete Category Request\n          </button>\n        </li>\n      </ul>\n      <p v-else class=\"no-categories\">No approved categories available.</p>\n    </div>\n\n    <div class=\"category-section\">\n      <h2>Create New Category</h2>\n      <label for=\"category_name\" class=\"form-label\">Category Name:</label>\n      <input\n        type=\"text\"\n        v-model=\"formData.category_name\"\n        required\n        class=\"form-input\"\n      /><label for=\"category_image\" class=\"form-label\">Category Image:</label>\n      <input\n        type=\"file\"\n        @change=\"handleImageUpload\"\n        class=\"form-input\"\n        accept=\"image/*\"\n      />\n      <button @click.prevent=\"createCategory\" class=\"add\">\n        Create Category Request\n      </button>\n    </div>\n\n    <button @click=\"exportManagerCSV\" class=\"export-csv\">Export Csv</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ManagerDashboard\",\n  data() {\n    return {\n      account: {\n        username: \"\",\n        email: \"\",\n        id: null,\n        roles: [],\n      },\n      approvedCategories: [],\n      formData: {\n        category_name: \"\",\n        category_image: null,\n      },\n    };\n  },\n  async mounted() {\n    const email = this.$route.params.email;\n    const resaccount = await fetch(\n      `http://localhost:5000/api/getUserData/${email}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n      }\n    );\n    const dataaccount = await resaccount.json();\n    console.log(dataaccount);\n    if (resaccount.ok) {\n      this.account = dataaccount;\n      this.$store.commit(\"setCurrentUser\", {\n        id: dataaccount.id,\n        username: dataaccount.username,\n        email: dataaccount.email,\n        roles: dataaccount.roles,\n      });\n      console.log(\"setting done!\");\n    } else if (resaccount.status == 401) {\n      this.success = false;\n      this.error = dataaccount.response.error;\n    } else {\n      this.success = false;\n      this.error = dataaccount.message;\n      alert(\"something went wrong\");\n      this.$router.push(\"/\");\n      localStorage.clear();\n    }\n    const c_response = await fetch(\"http://localhost:5000/api/getCategory\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n      },\n    });\n    const c_data = await c_response.json();\n    console.log(c_data);\n    if (c_response.ok && this.account.roles.includes(\"<Role 2>\")) {\n      this.approvedCategories = Array.isArray(c_data) ? c_data : [];\n    } else {\n      alert(\"Something went wrong\");\n      this.$router.push(\"/\");\n    }\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isManager() {\n      return this.account.roles.includes(\"<Role 2>\");\n    },\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.formData.category_image = event.target.files[0];\n    },\n    async createCategory() {\n      const shouldCreate = window.confirm(\n        \"Are you sure you want to create this category request?\"\n      );\n      if (!shouldCreate) {\n        return;\n      }\n      try {\n        const formdata = new FormData();\n        formdata.append(\"category_name\", this.formData.category_name);\n        if (this.formData.category_image) {\n          formdata.append(\"category_image\", this.formData.category_image);\n        }\n        const response = await fetch(\"http://localhost:5000/api/addCategory\", {\n          method: \"post\",\n          headers: {\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n          },\n          body: formdata,\n        });\n\n        const data = await response.json();\n        console.log(data);\n\n        if (response.ok) {\n          alert(\"Category creation request sent successfully!\");\n          this.formData.category_name = \"\";\n          this.formData.category_image = null;\n        } else {\n          alert(\n            \"Failed to send category creation request, Category Already Exists\"\n          );\n          this.formData.category_name = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error creating category:\", error);\n        alert(\"An error occurred while creating the category.\");\n      }\n    },\n    async deleteCategory(c_id) {\n      const shouldDelete = window.confirm(\n        \"Are you sure you want to delete this category request?\"\n      );\n      if (!shouldDelete) {\n        return;\n      }\n      try {\n        const response = await fetch(\n          `http://localhost:5000/api/deleteCategory/${c_id}`,\n          {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n          }\n        );\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          alert(\"Delete Request Sent Successfully\");\n          this.categories = data.categories;\n        } else {\n          alert(\"Unable to send delete request.Try again!\");\n        }\n      } catch (error) {\n        console.error(error);\n        alert(\"Failed to send delete request. Try again!\");\n      }\n    },\n\n    async exportManagerCSV() {\n      try {\n        const user_id = this.$store.state.currentUserId;\n        const response = await fetch(\n          `http://localhost:5000/export_manager_csv/${user_id}`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n            },\n            responseType: \"blob\",\n          }\n        );\n        if (response.ok) {\n          const csvShop = await response.blob();\n          const csvUrl = URL.createObjectURL(csvShop);\n          const a = document.createElement(\"a\");\n          a.href = csvUrl;\n          a.download = `${user_id}_data.csv`;\n          a.click();\n          alert(\"CSV export job started\");\n        } else {\n          alert(\"Failed to start CSV export job\");\n        }\n      } catch (error) {\n        console.error(error);\n        alert(\"Failed to start CSV export job\");\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n#app {\n  margin: 10px;\n  padding: 20px;\n}\n\n.dashboard-title {\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: white;\n}\n\n.navbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #4caf50;\n  color: white;\n  padding: 10px;\n}\n\n.logout-link {\n  color: white;\n  text-decoration: none;\n  padding: 5px 10px;\n  background-color: #333;\n  border-radius: 5px;\n}\n\n.category-section {\n  margin-bottom: 30px;\n  margin-top: 20px;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background-color: whitesmoke;\n}\n\n.category-list {\n  list-style: none;\n  padding: 0;\n}\n\n.category-item {\n  margin: 5px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.category-link {\n  text-decoration: none;\n  color: #333;\n}\n\n.delete,\n.add,\n.export-csv {\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  padding: 8px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 14px;\n  margin: 4px 2px;\n  cursor: pointer;\n}\n\n.delete:hover,\n.add:hover,\n.export-csv:hover {\n  background-color: #45a049;\n}\n.form-input {\n  width: 300px;\n  height: 30px;\n  border: 1px solid black;\n  border-radius: 4px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}