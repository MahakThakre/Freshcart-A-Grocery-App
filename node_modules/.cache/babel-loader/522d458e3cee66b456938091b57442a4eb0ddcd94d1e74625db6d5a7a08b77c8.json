{"ast":null,"code":"export default {\n  name: \"CategoryProducts\",\n  data() {\n    return {\n      products: [],\n      formData: {\n        product_name: \"\",\n        manufacture_date: \"\",\n        expiry_date: \"\",\n        price: 0,\n        rate_per_unit: \"\",\n        stock: 0,\n        productImage: null\n      },\n      fta: {\n        category_name: \"\"\n      }\n    };\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isUser() {\n      return this.account.roles.includes(\"<Role 2>\");\n    }\n  },\n  async mounted() {\n    const c_id = this.$route.params.category_id;\n    const response = await fetch(`http://localhost:5000/api/getProducts/${c_id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    if (response.ok) {\n      this.products = Array.isArray(data) ? data : [];\n    } else {\n      alert(\"No Products Available\");\n    }\n  },\n  methods: {\n    onImageChange(event) {\n      const file = event.target.files[0];\n      console.log(file);\n      this.formData.productImage = event.target.files[0]; // Store selected image correctly\n    },\n\n    async createProduct() {\n      if (!this.formData.product_name || !this.formData.price || !this.formData.rate_per_unit || !this.formData.stock) {\n        alert(\"Please fill in all required fields.\");\n        return;\n      }\n      const isConfirmed = window.confirm(\"Are you sure you want to create this product?\");\n      if (!isConfirmed) {\n        return;\n      }\n      const formdata = new FormData();\n      formdata.append(\"product_name\", this.formData.product_name);\n      formdata.append(\"manufacture_date\", this.formData.manufacture_date);\n      formdata.append(\"expiry_date\", this.formData.expiry_date);\n      formdata.append(\"price\", this.formData.price);\n      formdata.append(\"rate_per_unit\", this.formData.rate_per_unit);\n      formdata.append(\"stock\", this.formData.stock);\n      if (this.formData.productImage) {\n        const file = event.target.files[0];\n        console.log(file);\n        formdata.append(\"product_image\", this.formData.productImage); // Corrected this\n      }\n\n      const cat_id = this.$route.params.category_id;\n      const _response = await fetch(`http://localhost:5000/api/addProduct/${cat_id}`, {\n        method: \"POST\",\n        headers: {\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n        },\n        body: formdata\n      });\n      const data = await _response.json();\n      console.log(data);\n      if (_response.ok) {\n        this.products = data;\n        this.clearForm();\n      } else {\n        alert(\"Error in creating product\");\n      }\n    },\n    clearForm() {\n      this.formData = {\n        product_name: \"\",\n        manufacture_date: \"\",\n        expiry_date: \"\",\n        price: 0,\n        rate_per_unit: \"\",\n        productImage: null,\n        stock: 0\n      };\n    },\n    async editcategory() {\n      const isConfirmed = window.confirm(\"Are you sure you want to send the category updation request?\");\n      if (!isConfirmed) {\n        return;\n      }\n      const c_id = this.$route.params.category_id;\n      const formdata = new FormData();\n      formdata.append(\"category_name\", this.fta.category_name);\n      const response = await fetch(`http://localhost:5000/api/editCategory/${c_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n        },\n        body: formdata\n      });\n      const data = await response.json();\n      console.log(data);\n      if (response.ok) {\n        alert(\"Category updation request sent successfully!\");\n        this.fta.category_name = \"\"; // Corrected this\n      } else {\n        alert(\"Failed to send category updation request, Category Already Exists\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","products","formData","product_name","manufacture_date","expiry_date","price","rate_per_unit","stock","productImage","fta","category_name","computed","currentUserEmail","$store","state","currentUserId","currentUserName","currentUsername","isUser","account","roles","includes","mounted","c_id","$route","params","category_id","response","fetch","method","headers","localStorage","getItem","json","console","log","ok","Array","isArray","alert","methods","onImageChange","event","file","target","files","createProduct","isConfirmed","window","confirm","formdata","FormData","append","cat_id","_response","body","clearForm","editcategory"],"sources":["C:\\Users\\mahak\\Downloads\\21f2000845-freshcart\\Mad 2 project\\freshcart\\src\\components\\category_products.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"product-container\">\n    <div style=\"margin-left: 600px; margin-top: -10px\">\n      <router-link to=\"/\" class=\"logout-link\" @click=\"logout\">\n        Logout </router-link\n      >&nbsp;&nbsp;\n      <router-link\n        :to=\"'/manager_dashboard/' + currentUserEmail\"\n        class=\"btn-dark\"\n        >Back</router-link\n      >\n    </div>\n    <div class=\"edit-category\">\n      <h3 class=\"title\">Edit Category</h3>\n\n      <div class=\"form-group\">\n        <label for=\"category_name\" class=\"form-label\">Category Name:</label>\n        <input\n          type=\"text\"\n          v-model=\"fta.category_name\"\n          required\n          class=\"form-cat-input\"\n        />\n      </div>\n      <button @click=\"editcategory\" class=\"edit-button\">\n        Edit Category Request\n      </button>\n    </div>\n    <div class=\"new-product\">\n      <h3 class=\"title\">Products</h3>\n\n      <ul v-if=\"products.length !== 0\" class=\"product-list\">\n        <li v-for=\"product in products\" :key=\"product.id\" class=\"product-item\">\n          <router-link\n            :to=\"{\n              name: 'single_product',\n              params: {\n                category_id: product.category.id,\n                product_id: product.id,\n              },\n            }\"\n            class=\"product-link\"\n          >\n            {{ product.name }}\n          </router-link>\n        </li>\n      </ul>\n      <p v-else class=\"no-products\">No products available.</p>\n    </div>\n    <div class=\"new-product\">\n      <h3 class=\"title\">Create New Product</h3>\n      <div class=\"form-group\">\n        <div class=\"form-column\">\n          <label for=\"product_name\" class=\"form-label\">Product Name:</label>\n          <input\n            type=\"text\"\n            v-model=\"formData.product_name\"\n            required\n            class=\"form-input\"\n          />\n        </div>\n\n        <div class=\"form-column\">\n          <label for=\"manufacture_date\" class=\"form-label\"\n            >Manufacture Date:</label\n          >\n          <input\n            type=\"date\"\n            v-model=\"formData.manufacture_date\"\n            class=\"form-input\"\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"form-column\">\n          <label for=\"product_image\" class=\"form-label\">Product Image:</label>\n          <input\n            type=\"file\"\n            @change=\"onImageChange\"\n            class=\"form-input\"\n            accept=\"image/*\"\n          />\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"form-column\">\n          <label for=\"expiry_date\" class=\"form-label\">Expiry Date:</label>\n          <input\n            type=\"date\"\n            v-model=\"formData.expiry_date\"\n            class=\"form-input\"\n          />\n        </div>\n\n        <div class=\"form-column\">\n          <label for=\"price\" class=\"form-label\">Product Price:</label>\n          <input\n            type=\"number\"\n            v-model=\"formData.price\"\n            class=\"form-input\"\n            required\n          />\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"form-column\">\n          <label for=\"rate_per_unit\" class=\"form-label\">Rate per Unit:</label>\n          <select v-model=\"formData.rate_per_unit\" required class=\"form-select\">\n            <option value=\"kg\">Rs/kg</option>\n            <option value=\"lit\">Rs/lit</option>\n            <option value=\"pack\">Rs/pack</option>\n            <option value=\"piece\">Rs/piece</option>\n          </select>\n        </div>\n\n        <div class=\"form-column\">\n          <label for=\"stock\" class=\"form-label\">Product Stock:</label>\n          <input\n            type=\"number\"\n            v-model=\"formData.stock\"\n            required\n            class=\"form-input\"\n          />\n        </div>\n      </div>\n\n      <button @click.prevent=\"createProduct\" class=\"create-button\">\n        Create Product\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CategoryProducts\",\n  data() {\n    return {\n      products: [],\n      formData: {\n        product_name: \"\",\n        manufacture_date: \"\",\n        expiry_date: \"\",\n        price: 0,\n        rate_per_unit: \"\",\n        stock: 0,\n        productImage: null,\n      },\n      fta: {\n        category_name: \"\",\n      },\n    };\n  },\n  computed: {\n    currentUserEmail() {\n      return this.$store.state.currentUserEmail;\n    },\n    currentUserId() {\n      return this.$store.state.currentUserId;\n    },\n    currentUserName() {\n      return this.$store.state.currentUsername;\n    },\n    isUser() {\n      return this.account.roles.includes(\"<Role 2>\");\n    },\n  },\n  async mounted() {\n    const c_id = this.$route.params.category_id;\n    const response = await fetch(\n      `http://localhost:5000/api/getProducts/${c_id}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n    if (response.ok) {\n      this.products = Array.isArray(data) ? data : [];\n    } else {\n      alert(\"No Products Available\");\n    }\n  },\n  methods: {\n    onImageChange(event) {\n      const file = event.target.files[0];\n      console.log(file);\n      this.formData.productImage = event.target.files[0]; // Store selected image correctly\n    },\n\n    async createProduct() {\n      if (\n        !this.formData.product_name ||\n        !this.formData.price ||\n        !this.formData.rate_per_unit ||\n        !this.formData.stock\n      ) {\n        alert(\"Please fill in all required fields.\");\n        return;\n      }\n      const isConfirmed = window.confirm(\n        \"Are you sure you want to create this product?\"\n      );\n      if (!isConfirmed) {\n        return;\n      }\n\n      const formdata = new FormData();\n      formdata.append(\"product_name\", this.formData.product_name);\n      formdata.append(\"manufacture_date\", this.formData.manufacture_date);\n      formdata.append(\"expiry_date\", this.formData.expiry_date);\n      formdata.append(\"price\", this.formData.price);\n      formdata.append(\"rate_per_unit\", this.formData.rate_per_unit);\n      formdata.append(\"stock\", this.formData.stock);\n      if (this.formData.productImage) {\n        const file = event.target.files[0];\n        console.log(file);\n        formdata.append(\"product_image\", this.formData.productImage); // Corrected this\n      }\n\n      const cat_id = this.$route.params.category_id;\n      const _response = await fetch(\n        `http://localhost:5000/api/addProduct/${cat_id}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n          },\n          body: formdata,\n        }\n      );\n\n      const data = await _response.json();\n      console.log(data);\n\n      if (_response.ok) {\n        this.products = data;\n        this.clearForm();\n      } else {\n        alert(\"Error in creating product\");\n      }\n    },\n\n    clearForm() {\n      this.formData = {\n        product_name: \"\",\n        manufacture_date: \"\",\n        expiry_date: \"\",\n        price: 0,\n        rate_per_unit: \"\",\n        productImage: null,\n        stock: 0,\n      };\n    },\n\n    async editcategory() {\n      const isConfirmed = window.confirm(\n        \"Are you sure you want to send the category updation request?\"\n      );\n      if (!isConfirmed) {\n        return;\n      }\n      const c_id = this.$route.params.category_id;\n      const formdata = new FormData();\n      formdata.append(\"category_name\", this.fta.category_name);\n\n      const response = await fetch(\n        `http://localhost:5000/api/editCategory/${c_id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n          },\n          body: formdata,\n        }\n      );\n\n      const data = await response.json();\n      console.log(data);\n\n      if (response.ok) {\n        alert(\"Category updation request sent successfully!\");\n        this.fta.category_name = \"\"; // Corrected this\n      } else {\n        alert(\n          \"Failed to send category updation request, Category Already Exists\"\n        );\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n#app {\n  max-width: 800px;\n  margin: 0 auto;\n  font-size: 18px;\n  border-radius: 20px;\n  padding: 30px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background: linear-gradient(to right, #a9f160, #87cefa);\n}\n\n.title {\n  font-size: 30px;\n  text-decoration: underline;\n  margin-bottom: 30px;\n  text-align: center;\n}\n\n.logout-link,\n.btn-dark {\n  text-align: center;\n  text-decoration: none;\n  color: #fff;\n  background-color: #343a40;\n  padding: 10px 15px;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 14px; /* Adjust the font size */\n}\n\n.logout-link:hover,\n.btn-dark:hover {\n  background-color: #23272b;\n}\n\n.product-list {\n  list-style: none;\n  padding: 0;\n}\n\n.product-item {\n  margin-bottom: 10px;\n}\n\n.product-link {\n  text-decoration: none;\n  color: #007bff;\n  font-weight: bold;\n}\n\n.product-link:hover {\n  text-decoration: underline;\n}\n\n.no-products {\n  font-style: italic;\n  color: #888;\n  font-size: 17px;\n}\n\n.new-product,\n.edit-category {\n  margin-top: 20px;\n  border: 1px solid white;\n  padding: 15px;\n  border-radius: 5px;\n  background-color: white;\n}\n\n.form-group {\n  margin-bottom: 15px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.form-column {\n  flex: 1;\n  margin-right: 10px;\n}\n\n.form-label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n.form-cat-input {\n  height: 30px;\n  width: 50%;\n  margin-right: 30px;\n}\n.form-input,\n.form-select,\n.form-input-half {\n  width: 100%;\n  padding: 8px;\n  box-sizing: border-box;\n}\n\n.create-button,\n.edit-button {\n  background-color: #28a745;\n  color: #fff;\n  padding: 8px 12px;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 14px; /* Adjust the font size */\n}\n\n.create-button:hover,\n.edit-button:hover {\n  background-color: #218838;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}