{"ast":null,"code":"export default {\n  name: \"CategoryProducts\",\n  data() {\n    return {\n      formData: {\n        product_name: \"\",\n        manufacture_date: \"\",\n        expiry_date: \"\",\n        price: 0,\n        rate_per_unit: \"\",\n        stock: 0,\n        image: null // Add image field\n      }\n    };\n  },\n\n  methods: {\n    handleImageUpload(event) {\n      this.formData.image = event.target.files[0]; // Capture the uploaded file\n    },\n\n    async createProduct() {\n      if (!this.formData.product_name || !this.formData.price || !this.formData.rate_per_unit || !this.formData.stock) {\n        alert(\"Please fill in all required fields.\");\n        return;\n      }\n      const isConfirmed = window.confirm(\"Are you sure you want to create this product?\");\n      if (!isConfirmed) {\n        return;\n      }\n      const formdata = new FormData();\n      formdata.append(\"product_name\", this.formData.product_name);\n      formdata.append(\"manufacture_date\", this.formData.manufacture_date);\n      formdata.append(\"expiry_date\", this.formData.expiry_date);\n      formdata.append(\"price\", this.formData.price);\n      formdata.append(\"rate_per_unit\", this.formData.rate_per_unit);\n      formdata.append(\"stock\", this.formData.stock);\n      if (this.formData.image) {\n        formdata.append(\"image\", this.formData.image); // Add the image file\n      }\n\n      const cat_id = this.$route.params.category_id;\n      const _response = await fetch(`http://localhost:5000/api/addProduct/${cat_id}`, {\n        method: \"POST\",\n        headers: {\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n        },\n        body: formdata\n      });\n      const data = await _response.json();\n      if (_response.ok) {\n        this.products = data;\n        this.clearForm();\n      } else {\n        alert(\"Error in creating product\");\n      }\n    },\n    clearForm() {\n      this.formData = {\n        product_name: \"\",\n        manufacture_date: \"\",\n        expiry_date: \"\",\n        price: 0,\n        rate_per_unit: \"\",\n        stock: 0\n      };\n    },\n    async editcategory() {\n      const isConfirmed = window.confirm(\"Are you sure you want to send the category updation request?\");\n      if (!isConfirmed) {\n        return;\n      }\n      const c_id = this.$route.params.category_id;\n      const formdata = new FormData();\n      formdata.append(\"category_name\", this.fta.category_name);\n      const response = await fetch(`http://localhost:5000/api/editCategory/${c_id}`, {\n        method: \"put\",\n        headers: {\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\")\n        },\n        body: formdata\n      });\n      const data = await response.json();\n      console.log(data);\n      if (response.ok) {\n        alert(\"Category updation request sent successfully!\");\n        this.formData.category_name = \"\";\n      } else {\n        alert(\"Failed to send category updation request, Category Already Exists\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","formData","product_name","manufacture_date","expiry_date","price","rate_per_unit","stock","image","methods","handleImageUpload","event","target","files","createProduct","alert","isConfirmed","window","confirm","formdata","FormData","append","cat_id","$route","params","category_id","_response","fetch","method","headers","localStorage","getItem","body","json","ok","products","clearForm","editcategory","c_id","fta","category_name","response","console","log"],"sources":["C:\\Users\\mahak\\Downloads\\21f2000845-freshcart\\Mad 2 project\\freshcart\\src\\components\\category_products.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"product-container\">\n    <div style=\"margin-left: 600px; margin-top: -10px\">\n      <router-link to=\"/\" class=\"logout-link\" @click=\"logout\">\n        Logout </router-link\n      >&nbsp;&nbsp;\n      <router-link\n        :to=\"'/manager_dashboard/' + currentUserEmail\"\n        class=\"btn-dark\"\n        >Back</router-link\n      >\n    </div>\n    <div class=\"edit-category\">\n      <h3 class=\"title\">Edit Category</h3>\n\n      <div class=\"form-group\">\n        <label for=\"category_name\" class=\"form-label\">Category Name:</label>\n        <input\n          type=\"text\"\n          v-model=\"fta.category_name\"\n          required\n          class=\"form-cat-input\"\n        />\n      </div>\n      <div class=\"form-group\">\n  <label for=\"product_image\" class=\"form-label\">Product Image:</label>\n  <input\n    type=\"file\"\n    @change=\"handleImageUpload\"\n    accept=\"image/*\"\n    class=\"form-input\"\n  />\n</div>\n\n      <button @click=\"editcategory\" class=\"edit-button\">\n        Edit Category Request\n      </button>\n    </div>\n    <div class=\"new-product\">\n      <h3 class=\"title\">Products</h3>\n\n      <ul v-if=\"products.length !== 0\" class=\"product-list\">\n        <li v-for=\"product in products\" :key=\"product.id\" class=\"product-item\">\n          <router-link\n            :to=\"{\n              name: 'single_product',\n              params: {\n                category_id: product.category.id,\n                product_id: product.id,\n              },\n            }\"\n            class=\"product-link\"\n          >\n            {{ product.name }}\n          </router-link>\n        </li>\n      </ul>\n      <p v-else class=\"no-products\">No products available.</p>\n    </div>\n    <div class=\"new-product\">\n      <h3 class=\"title\">Create New Product</h3>\n      <div class=\"form-group\">\n        <div class=\"form-column\">\n          <label for=\"product_name\" class=\"form-label\">Product Name:</label>\n          <input\n            type=\"text\"\n            v-model=\"formData.product_name\"\n            required\n            class=\"form-input\"\n          />\n        </div>\n\n        <div class=\"form-column\">\n          <label for=\"manufacture_date\" class=\"form-label\"\n            >Manufacture Date:</label\n          >\n          <input\n            type=\"date\"\n            v-model=\"formData.manufacture_date\"\n            class=\"form-input\"\n          />\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"form-column\">\n          <label for=\"expiry_date\" class=\"form-label\">Expiry Date:</label>\n          <input\n            type=\"date\"\n            v-model=\"formData.expiry_date\"\n            class=\"form-input\"\n          />\n        </div>\n\n        <div class=\"form-column\">\n          <label for=\"price\" class=\"form-label\">Product Price:</label>\n          <input\n            type=\"number\"\n            v-model=\"formData.price\"\n            class=\"form-input\"\n            required\n          />\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"form-column\">\n          <label for=\"rate_per_unit\" class=\"form-label\">Rate per Unit:</label>\n          <select v-model=\"formData.rate_per_unit\" required class=\"form-select\">\n            <option value=\"kg\">Rs/kg</option>\n            <option value=\"lit\">Rs/lit</option>\n            <option value=\"pack\">Rs/pack</option>\n            <option value=\"piece\">Rs/piece</option>\n          </select>\n        </div>\n\n        <div class=\"form-column\">\n          <label for=\"stock\" class=\"form-label\">Product Stock:</label>\n          <input\n            type=\"number\"\n            v-model=\"formData.stock\"\n            required\n            class=\"form-input\"\n          />\n        </div>\n      </div>\n\n      <button @click.prevent=\"createProduct\" class=\"create-button\">\n        Create Product\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CategoryProducts\",\n  data() {\n  return {\n    formData: {\n      product_name: \"\",\n      manufacture_date: \"\",\n      expiry_date: \"\",\n      price: 0,\n      rate_per_unit: \"\",\n      stock: 0,\n      image: null, // Add image field\n    },\n  };\n},\nmethods: {\n  handleImageUpload(event) {\n    this.formData.image = event.target.files[0]; // Capture the uploaded file\n  },\n  async createProduct() {\n    if (!this.formData.product_name || !this.formData.price || !this.formData.rate_per_unit || !this.formData.stock) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n\n    const isConfirmed = window.confirm(\"Are you sure you want to create this product?\");\n    if (!isConfirmed) {\n      return;\n    }\n\n    const formdata = new FormData();\n    formdata.append(\"product_name\", this.formData.product_name);\n    formdata.append(\"manufacture_date\", this.formData.manufacture_date);\n    formdata.append(\"expiry_date\", this.formData.expiry_date);\n    formdata.append(\"price\", this.formData.price);\n    formdata.append(\"rate_per_unit\", this.formData.rate_per_unit);\n    formdata.append(\"stock\", this.formData.stock);\n\n    if (this.formData.image) {\n      formdata.append(\"image\", this.formData.image); // Add the image file\n    }\n\n    const cat_id = this.$route.params.category_id;\n    const _response = await fetch(\n      `http://localhost:5000/api/addProduct/${cat_id}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n        },\n        body: formdata,\n      }\n    );\n\n    const data = await _response.json();\n    if (_response.ok) {\n      this.products = data;\n      this.clearForm();\n    } else {\n      alert(\"Error in creating product\");\n    }\n  },\n\n    clearForm() {\n      this.formData = {\n        product_name: \"\",\n        manufacture_date: \"\",\n        expiry_date: \"\",\n        price: 0,\n        rate_per_unit: \"\",\n        stock: 0,\n      };\n    },\n\n    async editcategory() {\n      const isConfirmed = window.confirm(\n        \"Are you sure you want to send the category updation request?\"\n      );\n      if (!isConfirmed) {\n        return;\n      }\n      const c_id = this.$route.params.category_id;\n      const formdata = new FormData();\n      formdata.append(\"category_name\", this.fta.category_name);\n      const response = await fetch(\n        `http://localhost:5000/api/editCategory/${c_id}`,\n        {\n          method: \"put\",\n          headers: {\n            \"Authentication-Token\": localStorage.getItem(\"auth-token\"),\n          },\n          body: formdata,\n        }\n      );\n\n      const data = await response.json();\n      console.log(data);\n\n      if (response.ok) {\n        alert(\"Category updation request sent successfully!\");\n        this.formData.category_name = \"\";\n      } else {\n        alert(\n          \"Failed to send category updation request, Category Already Exists\"\n        );\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n#app {\n  max-width: 800px;\n  margin: 0 auto;\n  font-size: 18px;\n  border-radius: 20px;\n  padding: 30px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background: linear-gradient(to right, #a9f160, #87cefa);\n}\n\n.title {\n  font-size: 30px;\n  text-decoration: underline;\n  margin-bottom: 30px;\n  text-align: center;\n}\n\n.logout-link,\n.btn-dark {\n  text-align: center;\n  text-decoration: none;\n  color: #fff;\n  background-color: #343a40;\n  padding: 10px 15px;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 14px; /* Adjust the font size */\n}\n\n.logout-link:hover,\n.btn-dark:hover {\n  background-color: #23272b;\n}\n\n.product-list {\n  list-style: none;\n  padding: 0;\n}\n\n.product-item {\n  margin-bottom: 10px;\n}\n\n.product-link {\n  text-decoration: none;\n  color: #007bff;\n  font-weight: bold;\n}\n\n.product-link:hover {\n  text-decoration: underline;\n}\n\n.no-products {\n  font-style: italic;\n  color: #888;\n  font-size: 17px;\n}\n\n.new-product,\n.edit-category {\n  margin-top: 20px;\n  border: 1px solid white;\n  padding: 15px;\n  border-radius: 5px;\n  background-color: white;\n}\n\n.form-group {\n  margin-bottom: 15px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.form-column {\n  flex: 1;\n  margin-right: 10px;\n}\n\n.form-label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n.form-cat-input {\n  height: 30px;\n  width: 50%;\n  margin-right: 30px;\n}\n.form-input,\n.form-select,\n.form-input-half {\n  width: 100%;\n  padding: 8px;\n  box-sizing: border-box;\n}\n\n.create-button,\n.edit-button {\n  background-color: #28a745;\n  color: #fff;\n  padding: 8px 12px;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 14px; /* Adjust the font size */\n}\n\n.create-button:hover,\n.edit-button:hover {\n  background-color: #218838;\n}\n</style>\n"],"mappings":"AAuIA,eAAe;EACbA,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACP,OAAO;MACLC,QAAQ,EAAE;QACRC,YAAY,EAAE,EAAE;QAChBC,gBAAgB,EAAE,EAAE;QACpBC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,CAAC;QACRC,aAAa,EAAE,EAAE;QACjBC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,IAAI,CAAE;MACf;IACF,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,KAAK,EAAE;MACvB,IAAI,CAACV,QAAQ,CAACO,KAAI,GAAIG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;IAC/C,CAAC;;IACD,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAACb,QAAQ,CAACC,YAAW,IAAK,CAAC,IAAI,CAACD,QAAQ,CAACI,KAAI,IAAK,CAAC,IAAI,CAACJ,QAAQ,CAACK,aAAY,IAAK,CAAC,IAAI,CAACL,QAAQ,CAACM,KAAK,EAAE;QAC/GQ,KAAK,CAAC,qCAAqC,CAAC;QAC5C;MACF;MAEA,MAAMC,WAAU,GAAIC,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC;MACnF,IAAI,CAACF,WAAW,EAAE;QAChB;MACF;MAEA,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,IAAI,CAACpB,QAAQ,CAACC,YAAY,CAAC;MAC3DiB,QAAQ,CAACE,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAACpB,QAAQ,CAACE,gBAAgB,CAAC;MACnEgB,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACpB,QAAQ,CAACG,WAAW,CAAC;MACzDe,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACpB,QAAQ,CAACI,KAAK,CAAC;MAC7Cc,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,IAAI,CAACpB,QAAQ,CAACK,aAAa,CAAC;MAC7Da,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACpB,QAAQ,CAACM,KAAK,CAAC;MAE7C,IAAI,IAAI,CAACN,QAAQ,CAACO,KAAK,EAAE;QACvBW,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACpB,QAAQ,CAACO,KAAK,CAAC,EAAE;MACjD;;MAEA,MAAMc,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,WAAW;MAC7C,MAAMC,SAAQ,GAAI,MAAMC,KAAK,CAC1B,wCAAuCL,MAAO,EAAC,EAChD;QACEM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,sBAAsB,EAAEC,YAAY,CAACC,OAAO,CAAC,YAAY;QAC3D,CAAC;QACDC,IAAI,EAAEb;MACR,CACF,CAAC;MAED,MAAMnB,IAAG,GAAI,MAAM0B,SAAS,CAACO,IAAI,CAAC,CAAC;MACnC,IAAIP,SAAS,CAACQ,EAAE,EAAE;QAChB,IAAI,CAACC,QAAO,GAAInC,IAAI;QACpB,IAAI,CAACoC,SAAS,CAAC,CAAC;MAClB,OAAO;QACLrB,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF,CAAC;IAECqB,SAASA,CAAA,EAAG;MACV,IAAI,CAACnC,QAAO,GAAI;QACdC,YAAY,EAAE,EAAE;QAChBC,gBAAgB,EAAE,EAAE;QACpBC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,CAAC;QACRC,aAAa,EAAE,EAAE;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,CAAC;IAED,MAAM8B,YAAYA,CAAA,EAAG;MACnB,MAAMrB,WAAU,GAAIC,MAAM,CAACC,OAAO,CAChC,8DACF,CAAC;MACD,IAAI,CAACF,WAAW,EAAE;QAChB;MACF;MACA,MAAMsB,IAAG,GAAI,IAAI,CAACf,MAAM,CAACC,MAAM,CAACC,WAAW;MAC3C,MAAMN,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,IAAI,CAACkB,GAAG,CAACC,aAAa,CAAC;MACxD,MAAMC,QAAO,GAAI,MAAMd,KAAK,CACzB,0CAAyCW,IAAK,EAAC,EAChD;QACEV,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,sBAAsB,EAAEC,YAAY,CAACC,OAAO,CAAC,YAAY;QAC3D,CAAC;QACDC,IAAI,EAAEb;MACR,CACF,CAAC;MAED,MAAMnB,IAAG,GAAI,MAAMyC,QAAQ,CAACR,IAAI,CAAC,CAAC;MAClCS,OAAO,CAACC,GAAG,CAAC3C,IAAI,CAAC;MAEjB,IAAIyC,QAAQ,CAACP,EAAE,EAAE;QACfnB,KAAK,CAAC,8CAA8C,CAAC;QACrD,IAAI,CAACd,QAAQ,CAACuC,aAAY,GAAI,EAAE;MAClC,OAAO;QACLzB,KAAK,CACH,mEACF,CAAC;MACH;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}